# -*- coding: utf-8 -*-
from __future__ import absolute_import, division, print_function, unicode_literals

import dj_database_url
import sentry_sdk

from decouple import config
from sentry_sdk.integrations.django import DjangoIntegration
from ureport.settings_common import *  # noqa


DEBUG = config('DEBUG', default=False, cast=bool)
TEMPLATE_DEBUG = DEBUG

API_BOUNDARY_CACHE_TIME = 30
API_GROUP_CACHE_TIME = 30
API_RESULT_CACHE_TIME = 30
API_CONTACT_RESULT_CACHE_TIME = 30
API_CONTACTS_CACHE_TIME = 30
API_FLOWS_CACHE_TIME = 30

EMPTY_SUBDOMAIN_HOST = config('EMPTY_SUBDOMAIN_HOST', 'https://ureport.in')
HOSTNAME = config('APP_HOSTNAME', 'ureport.in')

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='*', cast=lambda v: [
                       s.strip() for s in v.split(',')])

SESSION_COOKIE_DOMAIN = config('SESSION_COOKIE_DOMAIN', 'ureport.in')
SESSION_COOKIE_SECURE = False

ANONYMOUS_USER_ID = -1

ADMINS = config('ADMINS',
                default='Ilhasoft|contato@ilhasoft.com.br',
                cast=lambda v: [
                    (
                        s.strip().split('|')[0],
                        s.strip().split('|')[1],
                    ) for s in v.split(',')] if v else [])
MANAGERS = ADMINS

TIME_ZONE = config('TIME_ZONE', default='America/Sao_Paulo')
USER_TIME_ZONE = config('USER_TIME_ZONE', default='America/Sao_Paulo')

EMAIL_HOST = config('EMAIL_HOST', default='localhost')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', 'no-reply@ilhasoft.com.br')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='no-reply@ilhasoft.com.br')

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default='')
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY', default='')
AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME', default='')

AWS_S3_SECURE_URLS = False
AWS_QUERYSTRING_AUTH = False
AWS_S3_FILE_OVERWRITE = False

MEDIA_URL = config('MEDIA_URL', default='https://ureport.ilhasoft.mobi/media/')
SITE_API_HOST = config(
    'SITE_API_HOST', default='https://rapidpro.ilhasoft.mobi')
API_ENDPOINT = config(
    'SITE_API_HOST', default='https://rapidpro.ilhasoft.mobi')

DATABASES = {}
DATABASES['default'] = dj_database_url.parse(config('DEFAULT_DATABASE'))
DATABASES['default']['CONN_MAX_AGE'] = 60

MIDDLEWARE = MIDDLEWARE + ('whitenoise.middleware.WhiteNoiseMiddleware',)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'HTTPS')

REDIS_HOST = config('REDIS_HOST')
REDIS_DATABASE = config('REDIS_DATABASE', default='1')

BROKER_URL = 'redis://{}:6379/{}'.format(REDIS_HOST, REDIS_DATABASE)

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': BROKER_URL,
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default=BROKER_URL)
CELERY_ALWAYS_EAGER = config('CELERY_ALWAYS_EAGER', default=False, cast=bool)
CELERY_EAGER_PROPAGATES_EXCEPTIONS = config(
    'CELERY_EAGER_PROPAGATES_EXCEPTIONS', default=True, cast=bool)

COMPRESS_ENABLED = config('COMPRESS_ENABLED', default=True, cast=bool)
COMPRESS_OFFLINE = config('COMPRESS_OFFLINE', default=True, cast=bool)
COMPRESS_CSS_FILTERS = [
    'compressor.filters.css_default.CssAbsoluteFilter', 'compressor.filters.cssmin.CSSMinFilter']
COMPRESS_JS_FILTERS = ['compressor.filters.jsmin.JSMinFilter']
COMPRESS_OFFLINE_CONTEXT = dict(
    STATIC_URL=STATIC_URL, base_template='frame.html', debug=False, testing=False)

PREVIOUS_ORG_SITES = [
    {
        'name': s.strip().split(',')[0],
        'host': 'https://{}'.format(s.strip().split(',')[1]),
        'flag': 'https://{}.s3.amazonaws.com/images/{}'.format(s.strip().split(',')[2], s.strip().split(',')[3]),
        'is_static': False,
    } for s in config('PREVIOUS_ORG_SITES').split('|')] if config('PREVIOUS_ORG_SITES') else []

sentry_sdk.init(
    dsn=config('RAVEN_CONFIG', default=''),
    integrations=[DjangoIntegration()]
)

UREPORT_ASYNC_FETCHED_DATA_CACHE_TIME = config('UREPORT_ASYNC_FETCHED_DATA_CACHE_TIME', default=3600)
UREPORT_RUN_FETCHED_DATA_CACHE_TIME = config('UREPORT_RUN_FETCHED_DATA_CACHE_TIME', default=600)
